{
  "version": 3,
  "sources": ["../../../../../../Users/arnob_t78/Projects/ReactJS/sernitas-care/netlify/functions/applications.js"],
  "sourceRoot": "/var/folders/n9/dh_f_14566n691mrz2n3vkfm0000gn/T/tmp-28005-DHnWqMRdq0Xp",
  "sourcesContent": ["import { PrismaClient } from \"@prisma/client\";\n\nlet prisma;\n\n// Reuse Prisma Client instance across invocations to avoid connection issues\nif (!global.prisma) {\n  global.prisma = new PrismaClient();\n}\nprisma = global.prisma;\n\nexport async function handler(event, context) {\n  const { httpMethod, body } = event;\n\n  if (httpMethod === \"GET\") {\n    // Fetch all applications\n    try {\n      const applications = await prisma.application.findMany();\n      return {\n        statusCode: 200,\n        body: JSON.stringify(applications),\n      };\n    } catch (error) {\n      console.error(\"Error fetching applications:\", error);\n      return {\n        statusCode: 500,\n        body: JSON.stringify({ error: \"Failed to fetch applications\" }),\n      };\n    }\n  }\n\n  if (httpMethod === \"POST\") {\n    // Save application data\n    try {\n      const data = JSON.parse(body);\n      const application = await prisma.application.create({\n        data,\n      });\n      return {\n        statusCode: 201,\n        body: JSON.stringify(application),\n      };\n    } catch (error) {\n      console.error(\"Error saving application:\", error);\n      return {\n        statusCode: 500,\n        body: JSON.stringify({ error: \"Failed to save application\" }),\n      };\n    }\n  }\n\n  return {\n    statusCode: 405,\n    body: JSON.stringify({ error: \"Method not allowed\" }),\n  };\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA6B;AAE7B,IAAI;AAGJ,IAAI,CAAC,OAAO,QAAQ;AAClB,SAAO,SAAS,IAAI,2BAAa;AACnC;AACA,SAAS,OAAO;AAEhB,eAAsB,QAAQ,OAAO,SAAS;AAC5C,QAAM,EAAE,YAAY,KAAK,IAAI;AAE7B,MAAI,eAAe,OAAO;AAExB,QAAI;AACF,YAAM,eAAe,MAAM,OAAO,YAAY,SAAS;AACvD,aAAO;AAAA,QACL,YAAY;AAAA,QACZ,MAAM,KAAK,UAAU,YAAY;AAAA,MACnC;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,gCAAgC,KAAK;AACnD,aAAO;AAAA,QACL,YAAY;AAAA,QACZ,MAAM,KAAK,UAAU,EAAE,OAAO,+BAA+B,CAAC;AAAA,MAChE;AAAA,IACF;AAAA,EACF;AAEA,MAAI,eAAe,QAAQ;AAEzB,QAAI;AACF,YAAM,OAAO,KAAK,MAAM,IAAI;AAC5B,YAAM,cAAc,MAAM,OAAO,YAAY,OAAO;AAAA,QAClD;AAAA,MACF,CAAC;AACD,aAAO;AAAA,QACL,YAAY;AAAA,QACZ,MAAM,KAAK,UAAU,WAAW;AAAA,MAClC;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,6BAA6B,KAAK;AAChD,aAAO;AAAA,QACL,YAAY;AAAA,QACZ,MAAM,KAAK,UAAU,EAAE,OAAO,6BAA6B,CAAC;AAAA,MAC9D;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AAAA,IACL,YAAY;AAAA,IACZ,MAAM,KAAK,UAAU,EAAE,OAAO,qBAAqB,CAAC;AAAA,EACtD;AACF;",
  "names": []
}
